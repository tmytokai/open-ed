# coding: utf-8
%matplotlib inline
import matplotlib.pyplot as plt
import matplotlib.patches as patches
import numpy as np
import math
import re

scale=8 # PCの画面が小さいときは数字を下げる
dpi=100
xmin=-4
xmax=4
ymin=-4
ymax=4
pa=0
pb=0

a=0
phi=0
w=0
msec=0

plt.figure(figsize=(scale, scale), dpi=dpi)

ax = plt.subplot(111)
ax.set_xlim(xmin,xmax)
ax.set_ylim(ymin,ymax)
ax.spines['bottom'].set_position(('data',0))
ax.spines['left'].set_position(('data',0))
ax.spines['right'].set_visible(False)
ax.spines['top'].set_visible(False)
#ax.grid()
ax.text(xmax+0.1,-0.1,'Re[z]',fontsize=10)
ax.text(-0.2,ymax+0.1,'Im[z]',fontsize=10)
          
def exec_plot(t,fin=False):
    global pa
    global pb
    if(abs_z(t)!=-1000 and arg_z(t)!=-1000):
        a = abs_z(t)*np.cos(arg_z(t))
        b = abs_z(t)*np.sin(arg_z(t))
        if(t>0):
            if(fin):
                ax.arrow(pa,pb,a-pa,b-pb,width=0.005,head_width=0.15,length_includes_head=True,color='red')
            else:
                ax.plot([pa,a],[pb,b],lw=1, color='red')
        pa=a
        pb=b
        if((t*10)%10==0):
            name=r'$z({0:.0f})$'.format(t)
            ax.plot(a,b,marker='.',markersize=15,color='black')
            if(t<msec):
                ax.text(a+0.1,b+0.1,name,size=10)
            else:
                ax.text(a+0.5,b+0.1,'= '+name,size=10)

def abs_z(t):
    return a

def arg_z(t):
    return w*t+phi

##################
# ここから

# -1000 を正しい値に修正するとz(t)の動きが表示されます
# 円周率は np.pi です

a=-1000     # 振幅
phi=-1000   # 初期位相
w=-1000     # 角周波数

# ここまで
##################

if(a!=-1000 and a >0 and phi!=-1000 and w!=-1000):
    msec=np.ceil(2*np.pi/np.abs(w)).astype(np.int64)

if(msec>0):
    for i in range(msec*20):
        exec_plot(i/20)
    exec_plot(msec,fin=True)
