// Configuration Word 1, 詳しくはデータシート 50p 参照

#pragma config FOSC = INTOSC   // Oscillator Selection (INTOSC oscillator: I/O function on CLKIN pin)
#pragma config WDTE = OFF      // Watchdog Timer Enable (WDT disabled)
#pragma config PWRTE = OFF     // Power-up Timer Enable (PWRT disabled)
#pragma config MCLRE = ON      // MCLR Pin Function Select (MCLR/VPP pin function is MCLR)
#pragma config CP = OFF        // Flash Program Memory Code Protection (Program memory code protection is disabled)
#pragma config CPD = OFF       // Data Memory Code Protection (Data memory code protection is disabled)
#pragma config BOREN = OFF     // Brown-out Reset Enable (Brown-out Reset disabled)
#pragma config CLKOUTEN = OFF  // Clock Out Enable (CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin)
#pragma config IESO = OFF      // Internal/External Switchover (Internal/External Switchover mode is disabled)
#pragma config FCMEN = OFF     // Fail-Safe Clock Monitor Enable (Fail-Safe Clock Monitor is disabled)

// Configuration Word 2, 詳しくはデータシート 52p 参照

#pragma config WRT = OFF       // Flash Memory Self-Write Protection (Write protection off)
#pragma config PLLEN = OFF     // PLL Enable (4x PLL disabled)
#pragma config STVREN = ON     // Stack Overflow/Underflow Reset Enable (Stack Overflow or Underflow will cause a Reset)
#pragma config BORV = LO       // Brown-out Reset Voltage Selection (Brown-out Reset Voltage (Vbor), low trip point selected.)
#pragma config LVP = OFF       // Low-Voltage Programming Enable (High-voltage on MCLR/VPP must be used for programming)

#include <xc.h>
#include <stdio.h>

// __delay_ms 関数を使う場合は define する必要があります
// OSCCONの設定と合わせてください(今回は 4 Mhz)
#define _XTAL_FREQ 4000000  

// 全体初期化
void init(void)
{
    // オシレータ(発振回路)の設定で、FOSC(Frequency of Oscillator)を 4 Mhz にセットしています
    // 今回は FOSC = 4 MHz (SPLLEN=0, IRCF=0b1101) としています
    // 詳しくはデータシート 67p を参照してください
    OSCCON = 0b01101000; 

    // ポート A,B の初期化
    PORTA = 0x00; 
    PORTB = 0x00;

    // ポート A,B の入出力設定です
    // 0 にすると入力モード、1 にすると出力モードになります
    // 詳しくはデータシート 120p(ポートA)と126p(ポートB) を参照してください
    TRISA = 0b00000000;
    TRISB = 0b00000000;

    // ポート A,b のアナログ設定です
    // 0 にするとデジタル入出力モード、1 にするとアナログ入力モードになります
    // 詳しくはデータシート 122p(ポートA)と128p(ポートB) を参照してください
    ANSELA = 0b00000000;
    ANSELB = 0b00000000;
}

void main(void){

    init();

    while(1){
    }

   return;
}
