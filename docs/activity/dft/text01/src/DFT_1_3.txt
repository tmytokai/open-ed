import numpy as np
import math

np.set_printoptions(formatter={'float': '{: 0.3f}'.format})

# DFT_1_2 から SetF(f) 関数をコピーする
?

# DFT 係数の実数成分と虚数成分を計算する関数
def DFT(A,B,f):
    N = f.shape[0]
    for k in range(N):
        A[k]=0.0;
        B[k]=0.0;
        for i in range(N):
            # cos は math.cos
            # sin は math.sin
            # 円周率は math.pi
            A[k] += ?
            B[k] += ?
        A[k] /= ?
        B[k] /= ?

N = ? # 周期 = 信号長

f=np.zeros(N) # 元の信号f[i]
A=np.zeros(N) # DFT係数 C[k] の実数成分
B=np.zeros(N) # C[k] の虚数成分

SetF(f)
DFT(A,B,f)

for k in range(N):
    print(f'実数成分 A[{k}] = {A[k]: 0.2f}, 虚数成分 B[{k}] = {B[k]: 0.2f}')
