<Html>
<Head>
<Meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" href="../style.css" type="text/css" />
<Title>
線を引く(Xlib編)
</Title>
</head>
<body>


<table class="main">
<tr>
<td valign="top" >

<div class="menu">
<h2 class="menu">内容</h2>
更新日: 2005/12/16
<br>
バージョン: gtkmm24
<br>
<br>
■ <a href="#about">概要</a> <br>
■ <a href="#src">ソース</a> <br>
■ <a href="#com">コンパイル</a><br>
■ <a href="#result">結果</a><br>
<br>
<div Align="right">
<a href="../index.html">TOP</a>
</div>
</div>

</td>
<td valign="top"  >
<div class="main">

<h2 class="title">
線を引く(Xlib編)
</h2>

<a name="inst" />
<h2 class="sec">概要</h2>

Xlibを使ってGtk::DrawingAreaに線を引く
<p>
基本的には通常と同じようにon_expose_event()の中で描画すればよい。
XlibのGC,Displayなどを取得するにはGDK_GC_XGC()などのマクロを利用する。
<P>
ただしGtk::DrawingAreaは on_expose_event() を呼ぶ前に gdk_window_begin_paint_region() 
を呼んでオフスクリーンを作成し、 on_expose_event()の中でオフスクリーンに対して描画を
実行し、on_expose_event() を抜けた後にgdk_window_end_paint()を呼んでオフスクリーンを画面にコピーするため、
普通にXlibの関数を使って描画してもオフスクリーンが上書きされて表示されない。そこでGtk::DrawingAreaのコンストラクタで
set_double_buffered( false ) と指定してダブルバッファリングを無効にする必要がある。

<p>
<a name="src" />
<h2 class="sec">ソース</h2>
drawline2.cpp
<pre class="prog">

#include &lt;gtkmm.h&gt;

#include &lt;gdk/gdkx.h&gt;   // GDK_GC_XGC 用

class MyDrawArea : public Gtk::DrawingArea
{
    Glib::RefPtr&lt; Gdk::GC &gt; m_gc;
    
public:
    MyDrawArea();

protected:
    virtual bool on_expose_event( GdkEventExpose* e );
};


MyDrawArea::MyDrawArea()
{
    // ダブルバッファリング無効
    set_double_buffered( false );
}


bool MyDrawArea::on_expose_event( GdkEventExpose* event )
{
    if( ! m_gc  ) m_gc = Gdk::GC::create( get_window() );
    int width = get_width();
    int height = get_height();

    GC gc = GDK_GC_XGC( Glib::unwrap( m_gc ) );
    Window win = GDK_DRAWABLE_XID( Glib::unwrap( get_window() ) );
    Display* dpy = GDK_DISPLAY_XDISPLAY( Glib::unwrap( get_window()-&gt;get_display() ) );
    Colormap colmap = GDK_COLORMAP_XCOLORMAP( Glib::unwrap( get_default_colormap() ) );
    XColor colscr, colexact;

    // 背景の塗りつぶし
    unsigned long fgcolor = BlackPixel( dpy, 0 );
    XSetForeground( dpy, gc, fgcolor );
    XFillRectangle( dpy, win, gc, 0, 0, width, height );

    // 線を引く
    XAllocNamedColor( dpy, colmap, "yellow", &colscr, &colexact );
    fgcolor = colscr.pixel;
    XSetForeground( dpy, gc, fgcolor );
    XDrawLine( dpy, win, gc, 0, 0, width, height );
    return true;
}



class MainWin : public Gtk::Window
{
    MyDrawArea m_drawarea;

public:

    MainWin(){
        add( m_drawarea );
        show_all_children();
    }
};



int main( int argc, char *argv[] )
{
    Gtk::Main kit( argc, argv );
    MainWin mainwin;
    Gtk::Main::run( mainwin );

    return 0;
}


</pre>

<a name="com" />
<h2 class="sec">コンパイル</h2>

必要なコンパイルオプションは pkg-config を使って取得する。

<br><br>
<pre class="prog">
g++ drawline2.cpp -o drawline2 `pkg-config gtkmm-2.4 --cflags --libs`
</pre>

<a name="result" />
<h2 class="sec" >結果</h2>
<center>
<img src="./images/p11.png">
</center>

</div></td></tr></table>


</Body>
</Html>