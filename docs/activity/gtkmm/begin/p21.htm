<Html>
<Head>
<Meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<link rel="stylesheet" href="../style.css" type="text/css" />
<Title>
シグナルとシグナルハンドラ
</Title>
</head>
<body>

<table class="main">
<tr>
<td valign="top" >

<div class="menu" >
<h2 class="menu">内容</h2>
更新日: 2005/10/28
<br>
バージョン: gtkmm24
<br>
<br>
■ <a href="#about">概要</a> <br>
■ <a href="#src">ソース</a> <br>
■ <a href="#com">コンパイル</a><br>
■ <a href="#result">結果</a><br>
<br>
<div Align="right">
<a href="../index.html">TOP</a>
</div>

</div>
</td>

<td valign="top"  >
<div class="main">

<h2 class="title">
シグナルとシグナルハンドラ
</h2>

<a name="inst" />
<h2 class="sec">概要</h2>

シグナルとシグナルハンドラによって各インスタンス間でメッセージをやりとりすることが出来る。
<p>
はじめにシグナルとハンドラをconnect()によってコネクトする必要がある。一度コネクトすれば
何かイベントが起きるたびにシグナルが発せられてハンドラが呼び出される。下の例は前回と
同じくウィンドウ領域をクリックするとclickと表示する物であるが、シグナルとコネクトを
用いたバージョンとなっている。
<P>

<a name="src" />
<h2 class="sec">ソース</h2>

sig2.cpp
<pre class="prog">

#include &lt;gtkmm.h&gt;
#include &lt;iostream&gt;

class MainWin : public Gtk::Window
{
public:
    MainWin();

private:
    bool on_click( GdkEventButton* event );
};

MainWin::MainWin()
{
    // OFFになってるボタンプレスイベントを追加
    add_events( Gdk::BUTTON_PRESS_MASK );

    // コネクト
    signal_button_press_event().connect( sigc::mem_fun( *this, &MainWin::on_click ) );
}

// マウスクリック
bool MainWin::on_click( GdkEventButton* event )
{
    std::cout &lt;&lt; "click\n";
    return true;
}

int main( int argc, char *argv[] )
{
    Gtk::Main kit( argc, argv );
    MainWin mainwin;
    Gtk::Main::run( mainwin );

    return 0;
}

</pre>

<a name="com" />
<h2 class="sec">コンパイル</h2>

必要なコンパイルオプションは pkg-config を使って取得する。

<br><br>
<pre class="prog">
g++ sig2.cpp -o sig2 `pkg-config gtkmm-2.4 --cflags --libs`
</pre>

<a name="result" />
<h2 class="sec" >結果</h2>

マウスボタンをクリックすると"click"という文字列が表示される。


</div></td></tr></table>


</Body>
</Html>